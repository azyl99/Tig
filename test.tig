let
	type INT = int
	type INTEGER = int
	
	//type node = {key:int, s:STR}	//undefined type STR
	type node = {name: string, age: int}
	type list = {head:int, tail:list}
	type tree = {key:int, children:treelist}
	type treelist = {head:tree, tail:tree}
	
	//var x : INTEGER := "1"	//assign incompatible type to variable 'x'(need 'INTEGER', not'string')
	var x : INTEGER := 1
	var y := 1
	var haha : node := nil
	var li := list{head=1, tail=nil}
	var mytree := tree{key=1+2, children=nil}
in(
	1;
	haha := node{name="zyl", age=19};
	li := list{head=2, tail = li};
	mytree := tree{key=x, children=li};
	mytree := tree{key=x, children=nil}
)end